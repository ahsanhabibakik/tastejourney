 {
        "name": "Kendal",
        "entity_id": "01FA7B53-19B0-4DF8-9211-2E16C0100A7B",
        "type": "urn:entity",
        "subtype": "urn:entity:destination",
        "properties": {
          "geocode": {
            "name": "Kendal",
            "admin1_region": "England",
            "admin2_region": "Cumbria",
            "country_code": "GB"
          }
        },
        "popularity": 0.12919310970081596,
        "location": {
          "lat": 54.3242,
          "lon": -2.7474,
          "geohash": "gcwj13rmkuy1"
        },
        "tags": [
          {
            "id": "urn:tag:genre:destination:history",
            "name": "For the History",
            "type": "urn:tag:genre:destination"
          }
        ],
        "query": {
          "affinity": 0.7649962877984056
        },
        "disambiguation": ""
      },
      {
        "name": "Lake Louise",
        "entity_id": "000B9F41-1B3B-4051-94FC-A7E1BB38550B",
        "type": "urn:entity",
        "subtype": "urn:entity:destination",
        "properties": {
          "geocode": {
            "name": "Lake Louise",
            "admin1_region": "Alberta",
            "admin2_region": "",
            "country_code": "CA"
          }
        },
        "popularity": 0.8916591115140526,
        "location": {
          "lat": 51.4333,
          "lon": -116.183,
          "geohash": "c3jks5nheyj1"
        },
        "tags": [
          {
            "id": "urn:tag:genre:destination:scenic_picturesque",
            "name": "Scenic & Picturesque",
            "type": "urn:tag:genre:destination"
          },
          {
            "id": "urn:tag:genre:destination:nature",
            "name": "Nature",
            "type": "urn:tag:genre:destination"
          },
          {
            "id": "urn:tag:genre:destination:outdoor_activities",
            "name": "Outdoor Activities",
            "type": "urn:tag:genre:destination"
          },
          {
            "id": "urn:tag:genre:destination:romantic_getaways",
            "name": "Romantic Getaways",
            "type": "urn:tag:genre:destination"
          },
          {
            "id": "urn:tag:genre:destination:peace_tranquility",
            "name": "Peace and Tranquility",
            "type": "urn:tag:genre:destination"
          }
        ],
        "query": {
          "affinity": 0.7649962877984056
        },
        "disambiguation": ""
      }
    ]
  },
  "duration": 123
}
✅ Successfully received data from Qloo API
✅ Generated taste profile with 0.85 confidence
📊 Recommendations: 10, Cultural Affinities: 8
 POST /api/profile-taste 200 in 8477ms
⚠️ SERVICE: amadeus disabled - Missing key(s): AMADEUS_API_KEY, AMADEUS_API_SECRET
⚠️ SERVICE: numbeo disabled - Missing key(s): NUMBEO_API_KEY
⚠️ SERVICE: instagram disabled - Missing key(s): INSTAGRAM_ACCESS_TOKEN
⚠️ SERVICE: tiktok disabled - Missing key(s): TIKTOK_CLIENT_KEY, TIKTOK_CLIENT_SECRET      
⚠️ SERVICE: places disabled - Missing key(s): GOOGLE_PLACES_API_KEY
⚠️ SERVICE: ticketmaster disabled - Missing key(s): TICKETMASTER_API_KEY
⚠️ SERVICE: social_searcher disabled - Missing key(s): SOCIAL_SEARCHER_API_KEY
⚠️ SERVICE: openai disabled - Missing key(s): OPENAI_API_KEY

🚀 SERVICE CAPABILITY REPORT:
✅ Enabled Services: [ 'qloo', 'scraperapi', 'youtube', 'gemini', 'sendgrid' ]
❌ Disabled Services: [
  'amadeus',
  'numbeo',
  'instagram',
  'tiktok',
  'places',
  'ticketmaster',
  'social_searcher',
  'openai'
]
🔄 Fallbacks Available: [
  'amadeus->heuristic-pricing',
  'numbeo->cost-bands',
  'instagram->omit-signal',
  'tiktok->omit-signal',
  'places->osm-nominatim',
  'ticketmaster->omit-events',
  'social_searcher->available-platforms',
  'openai->retrieval-only'
]

🚀 PRIMARY ENGINE: Starting integrated recommendation generation...
✅ PRIMARY ENGINE: Website data received: {
  url: 'https://delwer.live',
  themes: [ 'business', 'technology', 'travel', 'writing' ],
  contentType: 'Travel'
}
✅ PRIMARY ENGINE: User profile prepared: {
  url: 'https://delwer.live',
  themes: [ 'business', 'technology', 'travel', 'writing' ],
  hints: [
    'blogger',
    'traveler',
    'vlogger',
    'artist',
    'entrepreneur',
    'educator',
    'reviewer'
  ],
  contentType: 'Travel',
  socialLinks: [
    {
      platform: 'LinkedIn',
      url: 'https://linkedin.com/in/delwer-hossain'
    }
  ],
  title: 'Md. Delwer Hossain – Corporate IT Manager & Full-Stack Developer',
  description: 'Corporate IT Manager and Full-Stack Developer specializing in scalable web 
and SaaS solutions using Next.js, React, and MongoDB.',
  keywords: [
    'full-stack developer',
    'next.js',
    'react',
    'mongodb',
    'node.js',
    'bangladesh',
    'chittagong'
  ],
  audienceLocation: 'Global'
}
✅ PRIMARY ENGINE: Taste profile prepared, confidence: 0.8
🎯 PRIMARY ENGINE: Calling integratedRecommendationService...
🚀 Starting integrated recommendation generation with all services...
🎯 QLOO: Attempting to get dynamic destinations...
🔍 QLOO: Trying endpoint /recommendations/destinations...
📡 QLOO: Response status for /recommendations/destinations: 401
🔍 QLOO: Trying endpoint /recommendations/travel...
📡 QLOO: Response status for /recommendations/travel: 401
🔍 QLOO: Trying endpoint /recommendations...
📡 QLOO: Response status for /recommendations: 401
🔍 QLOO: Trying endpoint /search/travel...
📡 QLOO: Response status for /search/travel: 401
⚠️ QLOO: All endpoints failed, using enhanced dynamic generation
🚀 QLOO: Generating TRULY dynamic destinations - no fixed pools, pure AI generation...     
🔍 QLOO: Attempting real-time destination discovery via API...
🔍 QLOO: Trying discovery endpoint /discover/destinations...
🔍 QLOO: Trying discovery endpoint /search/places...
🔍 QLOO: Trying discovery endpoint /recommendations/travel/discover...
🔍 QLOO: Trying discovery endpoint /taste/destinations...
❌ QLOO: All discovery endpoints failed
🤖 AI: Generating destinations using AI analysis of taste vectors...
[MEDIUM] qloo.get-recommendations: Error: Operation timeout
    at Timeout._onTimeout (src\services\errorHandler.ts:69:34)
  67 |         // Set timeout for the operation
  68 |         const timeoutPromise = new Promise<never>((_, reject) =>
> 69 |           setTimeout(() => reject(new Error('Operation timeout')), timeout)
     |                                  ^
  70 |         );
  71 |
  72 |         const result = await Promise.race([
🎯 QLOO: Attempting to get dynamic destinations...
🔍 QLOO: Trying endpoint /recommendations/destinations...
📡 QLOO: Response status for /recommendations/destinations: 401
🔍 QLOO: Trying endpoint /recommendations/travel...
✅ AI: Generated 12 unique destinations
✅ AI Generation: Created 12 destinations via AI
📡 QLOO: Response status for /recommendations/travel: 401
🔍 QLOO: Trying endpoint /recommendations...
📡 QLOO: Response status for /recommendations: 401
🔍 QLOO: Trying endpoint /search/travel...
📡 QLOO: Response status for /search/travel: 401
⚠️ QLOO: All endpoints failed, using enhanced dynamic generation
🚀 QLOO: Generating TRULY dynamic destinations - no fixed pools, pure AI generation...     
🔍 QLOO: Attempting real-time destination discovery via API...
🔍 QLOO: Trying discovery endpoint /discover/destinations...
🔍 QLOO: Trying discovery endpoint /search/places...
🔍 QLOO: Trying discovery endpoint /recommendations/travel/discover...
🔍 QLOO: Trying discovery endpoint /taste/destinations...
❌ QLOO: All discovery endpoints failed
🤖 AI: Generating destinations using AI analysis of taste vectors...
[MEDIUM] recommendations-api.generate-recommendations: Error: Operation timeout
    at Timeout._onTimeout (src\services\errorHandler.ts:69:34)
  67 |         // Set timeout for the operation
  68 |         const timeoutPromise = new Promise<never>((_, reject) =>
> 69 |           setTimeout(() => reject(new Error('Operation timeout')), timeout)
     |                                  ^
  70 |         );
  71 |
  72 |         const result = await Promise.race([
🚀 PRIMARY ENGINE: Starting integrated recommendation generation...
✅ PRIMARY ENGINE: Website data received: {
  url: 'https://delwer.live',
  themes: [ 'business', 'technology', 'travel', 'writing' ],
  contentType: 'Travel'
}
✅ PRIMARY ENGINE: User profile prepared: {
  url: 'https://delwer.live',
  themes: [ 'business', 'technology', 'travel', 'writing' ],
  hints: [
    'blogger',
    'traveler',
    'vlogger',
    'artist',
    'entrepreneur',
    'educator',
    'reviewer'
  ],
  contentType: 'Travel',
  socialLinks: [
    {
      platform: 'LinkedIn',
      url: 'https://linkedin.com/in/delwer-hossain'
    }
  ],
  title: 'Md. Delwer Hossain – Corporate IT Manager & Full-Stack Developer',
  description: 'Corporate IT Manager and Full-Stack Developer specializing in scalable web 
and SaaS solutions using Next.js, React, and MongoDB.',
  keywords: [
    'full-stack developer',
    'next.js',
    'react',
    'mongodb',
    'node.js',
    'bangladesh',
    'chittagong'
  ],
  audienceLocation: 'Global'
}
✅ PRIMARY ENGINE: Taste profile prepared, confidence: 0.8
🎯 PRIMARY ENGINE: Calling integratedRecommendationService...
🚀 Starting integrated recommendation generation with all services...
🎯 QLOO: Attempting to get dynamic destinations...
🔍 QLOO: Trying endpoint /recommendations/destinations...
[HIGH] qloo.get-recommendations: Error: Operation timeout
    at Timeout._onTimeout (src\services\errorHandler.ts:69:34)
  67 |         // Set timeout for the operation
  68 |         const timeoutPromise = new Promise<never>((_, reject) =>
> 69 |           setTimeout(() => reject(new Error('Operation timeout')), timeout)
     |                                  ^
  70 |         );
  71 |
  72 |         const result = await Promise.race([
🚀 INTEGRATED: Generating taste-based destinations with enhanced algorithm...
✅ INTEGRATED: Generated 10 taste-based destinations
Using fallback for qloo.get-recommendations
🎯 INTEGRATED: Generating dynamic base destinations for themes: [ 'business', 'technology', 'travel', 'writing' ]
🎯 INTEGRATED: Taste vector scores: {
  adventure: 0.9323,
  culture: 0.96855,
  luxury: 0.45099999999999996,
  food: 0.41799278737012074,
  nature: 0.929,
  urban: 0.9815,
  budget: 0.6000000000000001
}
✅ INTEGRATED: Generated dynamic destinations: [
  'Singapore, Singapore',
  'Seoul, South Korea',
  'Shenzhen, China',
  'Tel Aviv, Israel',
  'Tallinn, Estonia',
  'Queenstown, New Zealand',
  'Patagonia, Chile',
  'Iceland, Iceland'
]
Error generating Gemini recommendation: Error: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerDayPerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-flash"},"quotaValue":"50"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"16s"}]
    at handleResponseNotOk (.next\server\chunks\_36cf9647._.js:693:11)
    at async makeRequest (.next\server\chunks\_36cf9647._.js:665:9)
    at async generateContent (.next\server\chunks\_36cf9647._.js:1107:22)
    at async GeminiService.generateDynamicRecommendation (src\services\gemini.ts:99:21)    
    at async GeminiService.generateMultipleRecommendations (src\services\gemini.ts:347:28) 
    at async IntegratedRecommendationService.getAIDestinations (src\services\integrated-recommendation.ts:330:38)
    at async IntegratedRecommendationService.generateRecommendations (src\services\integrated-recommendation.ts:134:29)
    at async (src\app\api\recommendations\route.ts:95:23)
   97 |       const prompt = this.buildRecommendationPrompt(request);
   98 |
>  99 |       const result = await this.model.generateContent(prompt);
      |                     ^
  100 |       const response = await result.response;
  101 |       const text = response.text();
  102 |        {
  status: 429,
  statusText: 'Too Many Requests',
  errorDetails: [Array]
}
Error generating Gemini recommendation: Error: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerDayPerProjectPerModel-FreeTier","quotaDimensions":{"model":"gemini-1.5-flash","location":"global"},"quotaValue":"50"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"16s"}]
    at handleResponseNotOk (.next\server\chunks\_36cf9647._.js:693:11)
    at async makeRequest (.next\server\chunks\_36cf9647._.js:665:9)
    at async generateContent (.next\server\chunks\_36cf9647._.js:1107:22)
    at async GeminiService.generateDynamicRecommendation (src\services\gemini.ts:99:21)    
    at async GeminiService.generateMultipleRecommendations (src\services\gemini.ts:347:28) 
    at async IntegratedRecommendationService.getAIDestinations (src\services\integrated-recommendation.ts:330:38)
    at async IntegratedRecommendationService.generateRecommendations (src\services\integrated-recommendation.ts:134:29)
    at async (src\app\api\recommendations\route.ts:95:23)
   97 |       const prompt = this.buildRecommendationPrompt(request);
   98 |
>  99 |       const result = await this.model.generateContent(prompt);
      |                     ^
  100 |       const response = await result.response;
  101 |       const text = response.text();
  102 |        {
  status: 429,
  statusText: 'Too Many Requests',
  errorDetails: [Array]
}
📡 QLOO: Response status for /recommendations/destinations: 401
🔍 QLOO: Trying endpoint /recommendations/travel...
✅ AI: Generated 12 unique destinations
✅ AI Generation: Created 12 destinations via AI
Error generating Gemini recommendation: Error: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerDayPerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-flash"},"quotaValue":"50"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"14s"}]
    at handleResponseNotOk (.next\server\chunks\_36cf9647._.js:693:11)
    at async makeRequest (.next\server\chunks\_36cf9647._.js:665:9)
    at async generateContent (.next\server\chunks\_36cf9647._.js:1107:22)
    at async GeminiService.generateDynamicRecommendation (src\services\gemini.ts:99:21)    
    at async GeminiService.generateMultipleRecommendations (src\services\gemini.ts:347:28) 
    at async IntegratedRecommendationService.getAIDestinations (src\services\integrated-recommendation.ts:330:38)
    at async IntegratedRecommendationService.generateRecommendations (src\services\integrated-recommendation.ts:134:29)
    at async (src\app\api\recommendations\route.ts:95:23)
   97 |       const prompt = this.buildRecommendationPrompt(request);
   98 |
>  99 |       const result = await this.model.generateContent(prompt);
      |                     ^
  100 |       const response = await result.response;
  101 |       const text = response.text();
  102 |        {
  status: 429,
  statusText: 'Too Many Requests',
  errorDetails: [Array]
}
Error generating Gemini recommendation: Error: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerDayPerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-flash"},"quotaValue":"50"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"14s"}]
    at handleResponseNotOk (.next\server\chunks\_36cf9647._.js:693:11)
    at async makeRequest (.next\server\chunks\_36cf9647._.js:665:9)
    at async generateContent (.next\server\chunks\_36cf9647._.js:1107:22)
    at async GeminiService.generateDynamicRecommendation (src\services\gemini.ts:99:21)    
    at async GeminiService.generateMultipleRecommendations (src\services\gemini.ts:347:28) 
    at async IntegratedRecommendationService.getAIDestinations (src\services\integrated-recommendation.ts:330:38)
    at async IntegratedRecommendationService.generateRecommendations (src\services\integrated-recommendation.ts:134:29)
    at async (src\app\api\recommendations\route.ts:95:23)
   97 |       const prompt = this.buildRecommendationPrompt(request);
   98 |
>  99 |       const result = await this.model.generateContent(prompt);
      |                     ^
  100 |       const response = await result.response;
  101 |       const text = response.text();
  102 |        {
  status: 429,
  statusText: 'Too Many Requests',
  errorDetails: [Array]
}
📡 QLOO: Response status for /recommendations/travel: 401
🔍 QLOO: Trying endpoint /recommendations...
📡 QLOO: Response status for /recommendations: 401
🔍 QLOO: Trying endpoint /search/travel...
📡 QLOO: Response status for /search/travel: 401
⚠️ QLOO: All endpoints failed, using enhanced dynamic generation
🚀 QLOO: Generating TRULY dynamic destinations - no fixed pools, pure AI generation...     
🔍 QLOO: Attempting real-time destination discovery via API...
🔍 QLOO: Trying discovery endpoint /discover/destinations...
🔍 QLOO: Trying discovery endpoint /search/places...
🔍 QLOO: Trying discovery endpoint /recommendations/travel/discover...
🔍 QLOO: Trying discovery endpoint /taste/destinations...
❌ QLOO: All discovery endpoints failed
🤖 AI: Generating destinations using AI analysis of taste vectors...
✅ Generated 8 advanced Gemini recommendations
Enriching destination: Singapore
Enriching destination: Iceland
Enriching destination: Costa Rica
Enriching destination: Interlaken
Enriching destination: Kyoto
Instagram access token not found, using fallback creators
Google Places API key not found, using fallback places
Instagram access token not found, using fallback creators
Google Places API key not found, using fallback places
Instagram access token not found, using fallback creators
Google Places API key not found, using fallback places
Instagram access token not found, using fallback creators
Google Places API key not found, using fallback places
Instagram access token not found, using fallback creators
Google Places API key not found, using fallback places
Error getting flight prices: Error: Amadeus API credentials not found
    at BudgetService.getAmadeusToken (src\services\budget.ts:86:12)
    at BudgetService.getFlightPrices (src\services\budget.ts:123:31)
    at BudgetService.calculateBudget (src\services\budget.ts:64:13)
    at IntegratedRecommendationService.getBudgetData (src\services\integrated-recommendation.ts:468:41)
    at async IntegratedRecommendationService.enrichDestination (src\services\integrated-recommendation.ts:442:39)
    at async IntegratedRecommendationService.generateRecommendations (src\services\integrated-recommendation.ts:140:35)
    at async (src\app\api\recommendations\route.ts:95:23)
  84 |
  85 |     if (!this.amadeusApiKey || !this.amadeusApiSecret) {
> 86 |       throw new Error('Amadeus API credentials not found');
     |            ^
  87 |     }
  88 |
  89 |     try {
Cached data for key: places:{"location":"Singapore"}
Error getting flight prices: Error: Amadeus API credentials not found
    at BudgetService.getAmadeusToken (src\services\budget.ts:86:12)
    at BudgetService.getFlightPrices (src\services\budget.ts:123:31)
    at BudgetService.calculateBudget (src\services\budget.ts:64:13)
    at IntegratedRecommendationService.getBudgetData (src\services\integrated-recommendation.ts:468:41)
    at async IntegratedRecommendationService.enrichDestination (src\services\integrated-recommendation.ts:442:39)
    at async IntegratedRecommendationService.generateRecommendations (src\services\integrated-recommendation.ts:140:35)
    at async (src\app\api\recommendations\route.ts:95:23)
  84 |
  85 |     if (!this.amadeusApiKey || !this.amadeusApiSecret) {
> 86 |       throw new Error('Amadeus API credentials not found');
     |            ^
  87 |     }
  88 |
  89 |     try {
Cached data for key: places:{"location":"Iceland"}
Error getting flight prices: Error: Amadeus API credentials not found
    at BudgetService.getAmadeusToken (src\services\budget.ts:86:12)
    at BudgetService.getFlightPrices (src\services\budget.ts:123:31)
    at BudgetService.calculateBudget (src\services\budget.ts:64:13)
    at IntegratedRecommendationService.getBudgetData (src\services\integrated-recommendation.ts:468:41)
    at async IntegratedRecommendationService.enrichDestination (src\services\integrated-recommendation.ts:442:39)
    at async IntegratedRecommendationService.generateRecommendations (src\services\integrated-recommendation.ts:140:35)
    at async (src\app\api\recommendations\route.ts:95:23)
  84 |
  85 |     if (!this.amadeusApiKey || !this.amadeusApiSecret) {
> 86 |       throw new Error('Amadeus API credentials not found');
     |            ^
  87 |     }
  88 |
  89 |     try {
Cached data for key: places:{"location":"Costa Rica"}
Error getting flight prices: Error: Amadeus API credentials not found
    at BudgetService.getAmadeusToken (src\services\budget.ts:86:12)
    at BudgetService.getFlightPrices (src\services\budget.ts:123:31)
    at BudgetService.calculateBudget (src\services\budget.ts:64:13)
    at IntegratedRecommendationService.getBudgetData (src\services\integrated-recommendation.ts:468:41)
    at async IntegratedRecommendationService.enrichDestination (src\services\integrated-recommendation.ts:442:39)
    at async IntegratedRecommendationService.generateRecommendations (src\services\integrated-recommendation.ts:140:35)
    at async (src\app\api\recommendations\route.ts:95:23)
  84 |
  85 |     if (!this.amadeusApiKey || !this.amadeusApiSecret) {
> 86 |       throw new Error('Amadeus API credentials not found');
     |            ^
  87 |     }
  88 |
  89 |     try {
Cached data for key: places:{"location":"Interlaken"}
Error getting flight prices: Error: Amadeus API credentials not found
    at BudgetService.getAmadeusToken (src\services\budget.ts:86:12)
    at BudgetService.getFlightPrices (src\services\budget.ts:123:31)
    at BudgetService.calculateBudget (src\services\budget.ts:64:13)
    at IntegratedRecommendationService.getBudgetData (src\services\integrated-recommendation.ts:468:41)
    at async IntegratedRecommendationService.enrichDestination (src\services\integrated-recommendation.ts:442:39)
    at async IntegratedRecommendationService.generateRecommendations (src\services\integrated-recommendation.ts:140:35)
    at async (src\app\api\recommendations\route.ts:95:23)
  84 |
  85 |     if (!this.amadeusApiKey || !this.amadeusApiSecret) {
> 86 |       throw new Error('Amadeus API credentials not found');
     |            ^
  87 |     }
  88 |
  89 |     try {
Cached data for key: places:{"location":"Kyoto"}
Cached data for key: budget:{"dates":{"duration":"3-5 days (short getaway)"},"destination":"Singapore","origin":"New York"}
Cached data for key: budget:{"dates":{"duration":"3-5 days (short getaway)"},"destination":"Iceland","origin":"New York"}
Cached data for key: budget:{"dates":{"duration":"3-5 days (short getaway)"},"destination":"Costa Rica","origin":"New York"}
Cached data for key: budget:{"dates":{"duration":"3-5 days (short getaway)"},"destination":"Interlaken","origin":"New York"}
Cached data for key: budget:{"dates":{"duration":"3-5 days (short getaway)"},"destination":"Kyoto","origin":"New York"}
Cached data for key: creator:{"location":"Singapore","niche":"Travel"}
Cached data for key: creator:{"location":"Iceland","niche":"Travel"}
Cached data for key: creator:{"location":"Kyoto","niche":"Travel"}
Cached data for key: creator:{"location":"Interlaken","niche":"Travel"}
Cached data for key: creator:{"location":"Costa Rica","niche":"Travel"}
Cached data for key: recommendations:{"preferences":{"budget":"2500-5000","duration":"3-5 days (short getaway)","style":"mid-range","contentFocus":"mixed content (photo + video)","climate":["Temperate & mild weather"]},"themes":["business","technology","travel","writing"]}✅ PRIMARY ENGINE SUCCESS: Generated 3 optimized recommendations
✅ AI: Generated 12 unique destinations
✅ AI Generation: Created 12 destinations via AI
🎯 INTEGRATED: Generating dynamic base destinations for themes: [ 'business', 'technology', 'travel', 'writing' ]
🎯 INTEGRATED: Taste vector scores: {
  adventure: 0.9323,
  culture: 0.96855,
  luxury: 0.45099999999999996,
  food: 0.41799278737012074,
  nature: 0.929,
  urban: 0.9815,
  budget: 0.6000000000000001
}
✅ INTEGRATED: Generated dynamic destinations: [
  'Singapore, Singapore',
  'Seoul, South Korea',
  'Shenzhen, China',
  'Tel Aviv, Israel',
  'Tallinn, Estonia',
  'Queenstown, New Zealand',
  'Patagonia, Chile',
  'Iceland, Iceland'
]
Error generating Gemini recommendation: Error: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerDayPerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-flash"},"quotaValue":"50"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"1s"}]
    at handleResponseNotOk (.next\server\chunks\_36cf9647._.js:693:11)
    at async makeRequest (.next\server\chunks\_36cf9647._.js:665:9)
    at async generateContent (.next\server\chunks\_36cf9647._.js:1107:22)
    at async GeminiService.generateDynamicRecommendation (src\services\gemini.ts:99:21)    
    at async GeminiService.generateMultipleRecommendations (src\services\gemini.ts:347:28) 
    at async IntegratedRecommendationService.getAIDestinations (src\services\integrated-recommendation.ts:330:38)
    at async IntegratedRecommendationService.generateRecommendations (src\services\integrated-recommendation.ts:134:29)
    at async (src\app\api\recommendations\route.ts:95:23)
    at async ErrorHandler.withFallback (src\services\errorHandler.ts:72:23)
    at async POST (src\app\api\recommendations\route.ts:43:9)
   97 |       const prompt = this.buildRecommendationPrompt(request);
   98 |
>  99 |       const result = await this.model.generateContent(prompt);
      |                     ^
  100 |       const response = await result.response;
  101 |       const text = response.text();
  102 |        {
  status: 429,
  statusText: 'Too Many Requests',
  errorDetails: [Array]
}
Error generating Gemini recommendation: Error: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerDayPerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-flash"},"quotaValue":"50"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"1s"}]
    at handleResponseNotOk (.next\server\chunks\_36cf9647._.js:693:11)
    at async makeRequest (.next\server\chunks\_36cf9647._.js:665:9)
    at async generateContent (.next\server\chunks\_36cf9647._.js:1107:22)
    at async GeminiService.generateDynamicRecommendation (src\services\gemini.ts:99:21)    
    at async GeminiService.generateMultipleRecommendations (src\services\gemini.ts:347:28) 
    at async IntegratedRecommendationService.getAIDestinations (src\services\integrated-recommendation.ts:330:38)
    at async IntegratedRecommendationService.generateRecommendations (src\services\integrated-recommendation.ts:134:29)
    at async (src\app\api\recommendations\route.ts:95:23)
    at async ErrorHandler.withFallback (src\services\errorHandler.ts:72:23)
    at async POST (src\app\api\recommendations\route.ts:43:9)
   97 |       const prompt = this.buildRecommendationPrompt(request);
   98 |
>  99 |       const result = await this.model.generateContent(prompt);
      |                     ^
  100 |       const response = await result.response;
  101 |       const text = response.text();
  102 |        {
  status: 429,
  statusText: 'Too Many Requests',
  errorDetails: [Array]
}
Error generating Gemini recommendation: Error: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerDayPerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-flash"},"quotaValue":"50"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"1s"}]
    at handleResponseNotOk (.next\server\chunks\_36cf9647._.js:693:11)
    at async makeRequest (.next\server\chunks\_36cf9647._.js:665:9)
    at async generateContent (.next\server\chunks\_36cf9647._.js:1107:22)
    at async GeminiService.generateDynamicRecommendation (src\services\gemini.ts:99:21)    
    at async GeminiService.generateMultipleRecommendations (src\services\gemini.ts:347:28) 
    at async IntegratedRecommendationService.getAIDestinations (src\services\integrated-recommendation.ts:330:38)
    at async IntegratedRecommendationService.generateRecommendations (src\services\integrated-recommendation.ts:134:29)
    at async (src\app\api\recommendations\route.ts:95:23)
    at async ErrorHandler.withFallback (src\services\errorHandler.ts:72:23)
    at async POST (src\app\api\recommendations\route.ts:43:9)
   97 |       const prompt = this.buildRecommendationPrompt(request);
   98 |
>  99 |       const result = await this.model.generateContent(prompt);
      |                     ^
  100 |       const response = await result.response;
  101 |       const text = response.text();
  102 |        {
  status: 429,
  statusText: 'Too Many Requests',
  errorDetails: [Array]
}
Error generating Gemini recommendation: Error: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerDayPerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-flash"},"quotaValue":"50"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"1s"}]
    at handleResponseNotOk (.next\server\chunks\_36cf9647._.js:693:11)
    at async makeRequest (.next\server\chunks\_36cf9647._.js:665:9)
    at async generateContent (.next\server\chunks\_36cf9647._.js:1107:22)
    at async GeminiService.generateDynamicRecommendation (src\services\gemini.ts:99:21)    
    at async GeminiService.generateMultipleRecommendations (src\services\gemini.ts:347:28) 
    at async IntegratedRecommendationService.getAIDestinations (src\services\integrated-recommendation.ts:330:38)
    at async IntegratedRecommendationService.generateRecommendations (src\services\integrated-recommendation.ts:134:29)
    at async (src\app\api\recommendations\route.ts:95:23)
    at async ErrorHandler.withFallback (src\services\errorHandler.ts:72:23)
    at async POST (src\app\api\recommendations\route.ts:43:9)
   97 |       const prompt = this.buildRecommendationPrompt(request);
   98 |
>  99 |       const result = await this.model.generateContent(prompt);
      |                     ^
  100 |       const response = await result.response;
  101 |       const text = response.text();
  102 |        {
  status: 429,
  statusText: 'Too Many Requests',
  errorDetails: [Array]
}
Error generating Gemini recommendation: Error: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerDayPerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-flash"},"quotaValue":"50"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"1s"}]
    at handleResponseNotOk (.next\server\chunks\_36cf9647._.js:693:11)
    at async makeRequest (.next\server\chunks\_36cf9647._.js:665:9)
    at async generateContent (.next\server\chunks\_36cf9647._.js:1107:22)
    at async GeminiService.generateDynamicRecommendation (src\services\gemini.ts:99:21)    
    at async GeminiService.generateMultipleRecommendations (src\services\gemini.ts:347:28) 
    at async IntegratedRecommendationService.getAIDestinations (src\services\integrated-recommendation.ts:330:38)
    at async IntegratedRecommendationService.generateRecommendations (src\services\integrated-recommendation.ts:134:29)
    at async (src\app\api\recommendations\route.ts:95:23)
    at async ErrorHandler.withFallback (src\services\errorHandler.ts:72:23)
    at async POST (src\app\api\recommendations\route.ts:43:9)
   97 |       const prompt = this.buildRecommendationPrompt(request);
   98 |
>  99 |       const result = await this.model.generateContent(prompt);
      |                     ^
  100 |       const response = await result.response;
  101 |       const text = response.text();
  102 |        {
  status: 429,
  statusText: 'Too Many Requests',
  errorDetails: [Array]
}
Error generating Gemini recommendation: Error: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerDayPerProjectPerModel-FreeTier","quotaDimensions":{"model":"gemini-1.5-flash","location":"global"},"quotaValue":"50"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"1s"}]
    at handleResponseNotOk (.next\server\chunks\_36cf9647._.js:693:11)
    at async makeRequest (.next\server\chunks\_36cf9647._.js:665:9)
    at async generateContent (.next\server\chunks\_36cf9647._.js:1107:22)
    at async GeminiService.generateDynamicRecommendation (src\services\gemini.ts:99:21)    
    at async GeminiService.generateMultipleRecommendations (src\services\gemini.ts:347:28) 
    at async IntegratedRecommendationService.getAIDestinations (src\services\integrated-recommendation.ts:330:38)
    at async IntegratedRecommendationService.generateRecommendations (src\services\integrated-recommendation.ts:134:29)
    at async (src\app\api\recommendations\route.ts:95:23)
    at async ErrorHandler.withFallback (src\services\errorHandler.ts:72:23)
    at async POST (src\app\api\recommendations\route.ts:43:9)
   97 |       const prompt = this.buildRecommendationPrompt(request);
   98 |
>  99 |       const result = await this.model.generateContent(prompt);
      |                     ^
  100 |       const response = await result.response;
  101 |       const text = response.text();
  102 |        {
  status: 429,
  statusText: 'Too Many Requests',
  errorDetails: [Array]
}
Error generating Gemini recommendation: Error: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerDayPerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-flash"},"quotaValue":"50"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"1s"}]
    at handleResponseNotOk (.next\server\chunks\_36cf9647._.js:693:11)
    at async makeRequest (.next\server\chunks\_36cf9647._.js:665:9)
    at async generateContent (.next\server\chunks\_36cf9647._.js:1107:22)
    at async GeminiService.generateDynamicRecommendation (src\services\gemini.ts:99:21)    
    at async GeminiService.generateMultipleRecommendations (src\services\gemini.ts:347:28) 
    at async IntegratedRecommendationService.getAIDestinations (src\services\integrated-recommendation.ts:330:38)
    at async IntegratedRecommendationService.generateRecommendations (src\services\integrated-recommendation.ts:134:29)
    at async (src\app\api\recommendations\route.ts:95:23)
    at async ErrorHandler.withFallback (src\services\errorHandler.ts:72:23)
    at async POST (src\app\api\recommendations\route.ts:43:9)
   97 |       const prompt = this.buildRecommendationPrompt(request);
   98 |
>  99 |       const result = await this.model.generateContent(prompt);
      |                     ^
  100 |       const response = await result.response;
  101 |       const text = response.text();
  102 |        {
  status: 429,
  statusText: 'Too Many Requests',
  errorDetails: [Array]
}
Error generating Gemini recommendation: Error: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerDayPerProjectPerModel-FreeTier","quotaDimensions":{"model":"gemini-1.5-flash","location":"global"},"quotaValue":"50"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"1s"}]
    at handleResponseNotOk (.next\server\chunks\_36cf9647._.js:693:11)
    at async makeRequest (.next\server\chunks\_36cf9647._.js:665:9)
    at async generateContent (.next\server\chunks\_36cf9647._.js:1107:22)
    at async GeminiService.generateDynamicRecommendation (src\services\gemini.ts:99:21)    
    at async GeminiService.generateMultipleRecommendations (src\services\gemini.ts:347:28) 
    at async IntegratedRecommendationService.getAIDestinations (src\services\integrated-recommendation.ts:330:38)
    at async IntegratedRecommendationService.generateRecommendations (src\services\integrated-recommendation.ts:134:29)
    at async (src\app\api\recommendations\route.ts:95:23)
    at async ErrorHandler.withFallback (src\services\errorHandler.ts:72:23)
    at async POST (src\app\api\recommendations\route.ts:43:9)
   97 |       const prompt = this.buildRecommendationPrompt(request);
   98 |
>  99 |       const result = await this.model.generateContent(prompt);
      |                     ^
  100 |       const response = await result.response;
  101 |       const text = response.text();
  102 |        {
  status: 429,
  statusText: 'Too Many Requests',
  errorDetails: [Array]
}
✅ Generated 8 advanced Gemini recommendations
Enriching destination: Medellín, Colombia
Enriching destination: Tbilisi, Georgia
Enriching destination: Valparaíso, Chile
Enriching destination: Sarajevo, Bosnia and Herzegovina
Enriching destination: Kathmandu Valley, Nepal
Instagram access token not found, using fallback creators
Google Places API key not found, using fallback places
Instagram access token not found, using fallback creators
Google Places API key not found, using fallback places
Instagram access token not found, using fallback creators
Google Places API key not found, using fallback places
Instagram access token not found, using fallback creators
Google Places API key not found, using fallback places
Instagram access token not found, using fallback creators
Google Places API key not found, using fallback places
Error getting flight prices: Error: Amadeus API credentials not found
    at BudgetService.getAmadeusToken (src\services\budget.ts:86:12)
    at BudgetService.getFlightPrices (src\services\budget.ts:123:31)
    at BudgetService.calculateBudget (src\services\budget.ts:64:13)
    at IntegratedRecommendationService.getBudgetData (src\services\integrated-recommendation.ts:468:41)
    at async IntegratedRecommendationService.enrichDestination (src\services\integrated-recommendation.ts:442:39)
    at async IntegratedRecommendationService.generateRecommendations (src\services\integrated-recommendation.ts:140:35)
    at async (src\app\api\recommendations\route.ts:95:23)
    at async ErrorHandler.withFallback (src\services\errorHandler.ts:72:23)
    at async POST (src\app\api\recommendations\route.ts:43:9)
  84 |
  85 |     if (!this.amadeusApiKey || !this.amadeusApiSecret) {
> 86 |       throw new Error('Amadeus API credentials not found');
     |            ^
  87 |     }
  88 |
  89 |     try {
Cached data for key: places:{"location":"Medellín, Colombia"}
Error getting flight prices: Error: Amadeus API credentials not found
    at BudgetService.getAmadeusToken (src\services\budget.ts:86:12)
    at BudgetService.getFlightPrices (src\services\budget.ts:123:31)
    at BudgetService.calculateBudget (src\services\budget.ts:64:13)
    at IntegratedRecommendationService.getBudgetData (src\services\integrated-recommendation.ts:468:41)
    at async IntegratedRecommendationService.enrichDestination (src\services\integrated-recommendation.ts:442:39)
    at async IntegratedRecommendationService.generateRecommendations (src\services\integrated-recommendation.ts:140:35)
    at async (src\app\api\recommendations\route.ts:95:23)
    at async ErrorHandler.withFallback (src\services\errorHandler.ts:72:23)
    at async POST (src\app\api\recommendations\route.ts:43:9)
  84 |
  85 |     if (!this.amadeusApiKey || !this.amadeusApiSecret) {
> 86 |       throw new Error('Amadeus API credentials not found');
     |            ^
  87 |     }
  88 |
  89 |     try {
Cached data for key: places:{"location":"Tbilisi, Georgia"}
Error getting flight prices: Error: Amadeus API credentials not found
    at BudgetService.getAmadeusToken (src\services\budget.ts:86:12)
    at BudgetService.getFlightPrices (src\services\budget.ts:123:31)
    at BudgetService.calculateBudget (src\services\budget.ts:64:13)
    at IntegratedRecommendationService.getBudgetData (src\services\integrated-recommendation.ts:468:41)
    at async IntegratedRecommendationService.enrichDestination (src\services\integrated-recommendation.ts:442:39)
    at async IntegratedRecommendationService.generateRecommendations (src\services\integrated-recommendation.ts:140:35)
    at async (src\app\api\recommendations\route.ts:95:23)
    at async ErrorHandler.withFallback (src\services\errorHandler.ts:72:23)
    at async POST (src\app\api\recommendations\route.ts:43:9)
  84 |
  85 |     if (!this.amadeusApiKey || !this.amadeusApiSecret) {
> 86 |       throw new Error('Amadeus API credentials not found');
     |            ^
  87 |     }
  88 |
  89 |     try {
Cached data for key: places:{"location":"Valparaíso, Chile"}
Error getting flight prices: Error: Amadeus API credentials not found
    at BudgetService.getAmadeusToken (src\services\budget.ts:86:12)
    at BudgetService.getFlightPrices (src\services\budget.ts:123:31)
    at BudgetService.calculateBudget (src\services\budget.ts:64:13)
    at IntegratedRecommendationService.getBudgetData (src\services\integrated-recommendation.ts:468:41)
    at async IntegratedRecommendationService.enrichDestination (src\services\integrated-recommendation.ts:442:39)
    at async IntegratedRecommendationService.generateRecommendations (src\services\integrated-recommendation.ts:140:35)
    at async (src\app\api\recommendations\route.ts:95:23)
    at async ErrorHandler.withFallback (src\services\errorHandler.ts:72:23)
    at async POST (src\app\api\recommendations\route.ts:43:9)
  84 |
  85 |     if (!this.amadeusApiKey || !this.amadeusApiSecret) {
> 86 |       throw new Error('Amadeus API credentials not found');
     |            ^
  87 |     }
  88 |
  89 |     try {
Cached data for key: places:{"location":"Sarajevo, Bosnia and Herzegovina"}
Error getting flight prices: Error: Amadeus API credentials not found
    at BudgetService.getAmadeusToken (src\services\budget.ts:86:12)
    at BudgetService.getFlightPrices (src\services\budget.ts:123:31)
    at BudgetService.calculateBudget (src\services\budget.ts:64:13)
    at IntegratedRecommendationService.getBudgetData (src\services\integrated-recommendation.ts:468:41)
    at async IntegratedRecommendationService.enrichDestination (src\services\integrated-recommendation.ts:442:39)
    at async IntegratedRecommendationService.generateRecommendations (src\services\integrated-recommendation.ts:140:35)
    at async (src\app\api\recommendations\route.ts:95:23)
    at async ErrorHandler.withFallback (src\services\errorHandler.ts:72:23)
    at async POST (src\app\api\recommendations\route.ts:43:9)
  84 |
  85 |     if (!this.amadeusApiKey || !this.amadeusApiSecret) {
> 86 |       throw new Error('Amadeus API credentials not found');
     |            ^
  87 |     }
  88 |
  89 |     try {
Cached data for key: places:{"location":"Kathmandu Valley, Nepal"}
Cached data for key: budget:{"dates":{"duration":"3-5 days (short getaway)"},"destination":"Medellín, Colombia","origin":"New York"}
Cached data for key: budget:{"dates":{"duration":"3-5 days (short getaway)"},"destination":"Tbilisi, Georgia","origin":"New York"}
Cached data for key: budget:{"dates":{"duration":"3-5 days (short getaway)"},"destination":"Valparaíso, Chile","origin":"New York"}
Cached data for key: budget:{"dates":{"duration":"3-5 days (short getaway)"},"destination":"Sarajevo, Bosnia and Herzegovina","origin":"New York"}
Cached data for key: budget:{"dates":{"duration":"3-5 days (short getaway)"},"destination":"Kathmandu Valley, Nepal","origin":"New York"}
Cached data for key: creator:{"location":"Sarajevo, Bosnia and Herzegovina","niche":"Travel"}
Cached data for key: creator:{"location":"Medellín, Colombia","niche":"Travel"}
Cached data for key: creator:{"location":"Valparaíso, Chile","niche":"Travel"}
Cached data for key: creator:{"location":"Tbilisi, Georgia","niche":"Travel"}
Cached data for key: creator:{"location":"Kathmandu Valley, Nepal","niche":"Travel"}
Cached data for key: recommendations:{"preferences":{"budget":"2500-5000","duration":"3-5 days (short getaway)","style":"mid-range","contentFocus":"mixed content (photo + video)","climate":["Temperate & mild weather"]},"themes":["business","technology","travel","writing"]}✅ PRIMARY ENGINE SUCCESS: Generated 3 optimized recommendations
 POST /api/recommendations 200 in 51849ms
